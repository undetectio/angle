name: Build ANGLE

on:
  push:
    branches: master

jobs:
  build:
    strategy:
        matrix:
          os:
          - ubuntu-latest
          #- windows-latest
          #- macOS-latest
          arch:
          - x64
          - arm64
    name: Build on ${{ matrix.os }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Maximize build space
        if: startsWith(matrix.os, 'ubuntu')
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 1024
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '2.x'
      -
        name: Build Linux/macOS
        if: |
          !startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git --depth 1
          export PATH=$(pwd)/depot_tools:$PATH
          python scripts/bootstrap.py
          gclient sync
          [[ "$OSTYPE" == "linux-gnu"* && "${{ matrix.arch }}" == "arm64" ]] && ./build/linux/sysroot_scripts/install-sysroot.py --arch=arm64
          # See: https://chromium.googlesource.com/chromium/src/+/master/build/install-build-deps.sh
          [[ "$OSTYPE" == "linux-gnu"* ]] && sudo apt-get -y remove php-common && ./build/install-build-deps.sh --no-syms --no-arm --no-prompt # Run on Linux only
          gn gen out/Release --args="is_debug=false dcheck_always_on=false target_cpu=\"${{ matrix.arch }}\" is_component_build=false angle_enable_swiftshader=false" # is_official_build=true chrome_pgo_phase=0 is_cfi=false
          autoninja -C out/Release
      -
        name: Build Windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          export DEPOT_TOOLS_WIN_TOOLCHAIN=0
          curl -fsSL -o depot_tools.zip https://storage.googleapis.com/chrome-infra/depot_tools.zip
          7z x depot_tools.zip -odepot_tools
          export PATH=$(pwd)/depot_tools:$PATH
          python scripts/bootstrap.py
          gclient.bat sync
          gn.bat gen out/Release --args="is_debug=false dcheck_always_on=false target_cpu=\"${{ matrix.arch }}\" is_component_build=false angle_enable_swiftshader=false" # is_official_build=true chrome_pgo_phase=0 is_cfi=false" target_os=\"winuwp\"
          autoninja.bat -C out/Release
      -
        name: Upload artifact on Linux
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: libs-linux-${{ matrix.arch }}
          path: |
            out/Release/libEGL.so
            out/Release/libGLESv2.so
      -
        name: Upload artifact on macOS
        if: startsWith(matrix.os, 'macOS')
        uses: actions/upload-artifact@v2
        with:
          name: libs-macos-${{ matrix.arch }}
          path: |
            out/Release/libEGL.dylib
            out/Release/libGLESv2.dylib
      -
        name: Upload artifact on Windows
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v2
        with:
          name: libs-windows-${{ matrix.arch }}
          path: |
            out/Release/libEGL.dll
            out/Release/libGLESv2.dll
